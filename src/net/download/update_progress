#!/bin/dash
#
# Updates progress status files from the backend-specific progress log file.
#
# Copyright 2022 Coastal Carolina University
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.


usage() {
    cat << EOF
$0 <-h | --help | status_directory> [[status_directory] ...]

Updates download progress information from backend-specific progress log
files. This script is called with one or more status directories, as used
by the download_file script, as arguments. Each status directory will be
updated by extracting information from its corresponding progress log.

If supported by the backend, the following files are created or updated:

 percent              Integer percentage of the download completed
 remain               Time remaining in seconds
 speed                Current transfer speed in bytes per second
 total                Total file size in bytes
 transferred          Total number of bytes downloaded so far

Note that percent, remain, and total require the server to provide a correct
content-length (or equivalent) at the start of the download. These values
therefore might not be available from some servers.
EOF
}


case "$1" in
    -h|--help)
        usage
        exit 0
    ;;
esac


whatami=$(readlink -e "$0")
whereami=$(dirname "${whatami}")


if [ $# -lt 1 ]; then
    echo "Usage: $0 <-h | --help | status_directory> [[status_directory] ...]" >&2
    exit 1
fi


status=0
while [ $# -gt 0 ]; do
    backend=$(cat "$1/backend")

    if [ -f "${whereami}/${backend}/progress" ]; then
        if [ -f "$1/progress.log" ]; then
            # Run the corresponding backend progress script, then pipe its output to awk, using the common
            # script (update_progress.awk) and the backend-specific progress.awk. The output file variables are
            # set here for use by update_progress.awk.
            "${whereami}/${backend}/progress" "$1/progress.log" | \
                awk -f "${whereami}/update_progress.awk" -f "${whereami}/${backend}/progress.awk" \
                    -v percent_file="$1/percent" -v remain_file="$1/remain" -v speed_file="$1/speed" \
                    -v total_file="$1/total" -v transferred_file="$1/transferred"
            [ $? -ne 0 ] && status=$?
        else
            echo "No progress.log found in $1" >&2
            status=1
        fi
    else
        echo "Unsupported backend: ${backend}" >&2
        status=1
    fi

    shift
done

exit ${status}
