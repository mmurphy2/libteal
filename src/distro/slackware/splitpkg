#!/bin/dash
#
# Splits a Slackware package file name or stem into its component parts:
# package name, version, architecture, and build. These parts are separated
# by spaces to simplify further processing with awk(1).
#
# Copyright 2022 Coastal Carolina University
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#

usage() {
    cat << EOF
$0 [[package_file_or_stem] ...]

Splits a Slackware package file name or stem (which is the package file name
without the extension) into its component parts. For each input package, an
output line containing the name, version, architecture, and build tag is
produced. The output line is separated by spaces, for easy processing with
awk(1) or other tools.

Inputs to this command may be given either as command-line arguments or via
standard input. If no command-line arguments are supplied, standard input is
used. Note that only packages whose names follow the correct, modern naming
convention are supported.
EOF
}

self=$(readlink -e "$0")
whereami=$(dirname "${self}")

case "$1" in
    -h|--help)
        usage
        exit 0
    ;;
esac

data=
if [ $# -gt 0 ]; then
    data=$(echo "$@" | tr ' ' '\n')
else
    data=$(cat)
fi

echo "${data}" | awk -f "${whereami}/splitpkg.awk"
